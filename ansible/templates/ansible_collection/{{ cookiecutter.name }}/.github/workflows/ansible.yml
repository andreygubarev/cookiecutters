{%- raw -%}
name: Ansible - Collection

on: [push]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install ansible-lint

      - name: Lint with ansible-lint
        run: ansible-lint --offline --project-dir .

  build:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -euxo pipefail
          python -m pip install pipenv
          python -m pipenv install

      - name: Update galaxy.yml version with the new tag if tag is present
        run: |
          set -euxo pipefail
          sed -i "s/^version: .*/version: ${GITHUB_SHA::7}/" galaxy.yml
          if [[ "${{ github.ref }}" == *"refs/tags/v"* ]]; then
            sed -i "s/^version: .*/version: ${GITHUB_REF#refs\/tags\/v}/" galaxy.yml
          fi

      - name: Build collection
        run: ansible-galaxy collection build --force

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ansible-collection
          path: "*.tar.gz"

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ansible-collection

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: python -m pip install ansible

      - name: Publish collection
        run: ansible-galaxy collection publish *.tar.gz --api-key ${{ secrets.GALAXY_API_KEY }}
        env:
          GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check if pre-release
        id: prerelease
        run: |
          echo "prerelease=$(if [[ "${{ github.ref }}" == *"rc"* ]]; then echo "true"; else echo "false"; fi)" >> "$GITHUB_OUTPUT"

      - uses: actions/download-artifact@v3
        with:
          name: ansible-collection

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ steps.prerelease.outputs.prerelease }}
          generate_release_notes: true
          files: |
            *.tar.gz

{%- endraw -%}
